{"version":3,"file":"index.js","names":["NordigenClient","endpoint","token","constructor","secretId","secretKey","baseUrl","headers","institution","InstitutionApi","client","agreement","AgreementApi","requisition","RequisitionsApi","account","accountId","AccountApi","request","parameters","method","HttpMethod","GET","url","URL","validParams","filterObject","Object","keys","length","search","URLSearchParams","response","fetch","body","JSON","stringify","json","generateToken","payload","POST","access","exchangeToken","refreshToken","initSession","redirectUrl","institutionId","referenceId","maxHistoricalDays","createAgreement","createRequisition","reference","id"],"sources":["../../node_modules/nordigen-node/lib/index.js"],"sourcesContent":["import {\n    AccountApi,\n    AgreementApi,\n    InstitutionApi,\n    RequisitionsApi\n} from \"./api/index.js\";\nimport { HttpMethod } from \"./httpMethod.js\";\nimport { filterObject } from \"./utils.js\";\nimport fetch from \"node-fetch\";\n\nexport default class NordigenClient {\n\n    #endpoint = \"token\";\n    #token = null;\n\n    /**\n     *\n     * @param {Object} params\n     * @param {string} params.secretId\n     * @param {string} params.secretKey\n     */\n    constructor({secretId, secretKey}) {\n        this.baseUrl = `https://ob.nordigen.com/api/v2`;\n        this.secretKey = secretKey;\n        this.secretId =  secretId;\n        this.headers = {\n            \"accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"User-Agent\": \"Nordigen-Node-v2\"\n        };\n        this.institution = new InstitutionApi({client: this});\n        this.agreement = new AgreementApi({client: this});\n        this.requisition = new RequisitionsApi({client: this});\n    }\n\n    /**\n     * Token setter\n     * @param {string} token\n    */\n    set token(token) {\n        this.#token = token\n        this.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    /**\n     * Token getter\n     * @returns {string} token\n    */\n    get token() {\n        return this.#token\n    }\n\n    /**\n     * Construct Account object\n     * @param {string} accountId\n     * @returns {AccountApi}\n     */\n    account(accountId) {\n        return new AccountApi({client: this, accountId: accountId});\n    }\n\n    /**\n     * Request wrapper\n     * @param {Object} params\n     * @param {string} params.endpoint API endpoint\n     * @param {string} params.parameters for Post or Get request\n     * @param {HttpMethod} [params.method] HTTP method\n     * @returns Request object\n    */\n    async request({endpoint, parameters, method = HttpMethod.GET}) {\n\n        const url = new URL(`${this.baseUrl}/${endpoint}`);\n        const validParams = filterObject(parameters);\n\n        if(method === HttpMethod.GET && Object.keys(validParams).length > 0) {\n            url.search = new URLSearchParams(validParams);\n        }\n\n        const response = await fetch(url, {\n            method,\n            headers: this.headers,\n            ...(method !== HttpMethod.GET ? { body: JSON.stringify(parameters) } : {}),\n        })\n\n        return response.json();\n    }\n\n    /**\n     * Generate new access token\n     * @returns Object with token details\n    */\n    async generateToken() {\n        const payload = {\n            \"secret_key\": this.secretKey,\n            \"secret_id\": this.secretId\n        }\n\n        const response = await this.request({\n            endpoint: `${this.#endpoint}/new/`,\n            parameters: payload,\n            method: HttpMethod.POST\n        });\n\n        this.headers[\"Authorization\"] = `Bearer ${response.access}`;\n        return response;\n    }\n\n    /**\n     * Exchange refresh token for access token\n     * @param {Object} params\n     * @param {string} params.refreshToken\n     * @returns Object with new access token\n    */\n    exchangeToken({refreshToken}) {\n        const payload = {\"refresh\": refreshToken};\n        const response = this.request({\n            endpoint: `${this.#endpoint}/refresh/`,\n            parameters: payload,\n            method: HttpMethod.POST\n        })\n\n        return response;\n    }\n\n    /**\n     * Factory method that creates authorization in a specific institution\n        and are responsible for the following steps:\n            * Gets institution id;\n            * Creates agreement\n            * Creates requisiton\n     * @param {Object} params\n     * @param {string} params.redirectUrl\n     * @param {string} params.institutionId\n     * @param {string} params.referenceId\n     * @param {number} [params.maxHistoricalDays]\n     * @returns Requisitions object\n    */\n    async initSession({redirectUrl, institutionId, referenceId, maxHistoricalDays = 90}) {\n        // Create agreement\n        const agreement = await this.agreement.createAgreement({\n            maxHistoricalDays: maxHistoricalDays,\n            institutionId: institutionId\n        });\n\n        // Create new requisition\n        const requisition = await this.requisition.createRequisition({\n            redirectUrl: redirectUrl,\n            institutionId: institutionId,\n            reference: referenceId,\n            agreement: agreement.id\n        });\n\n        return requisition;\n    }\n\n}\n"],"mappings":"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"}